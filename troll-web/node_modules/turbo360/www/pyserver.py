# https://github.com/rmotr/flask-api-example
from flask import Flask, render_template, make_response, send_from_directory, request, redirect, jsonify
import os
import sys
import json

parent_dir_name = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
root_dir = parent_dir_name.replace('node_modules/turbo360', 'vectors/py')
sys.path.insert(0, root_dir)
import app # import app.py from user project

turbo_app = Flask(__name__, template_folder="../../../", static_url_path='')

class Res(object):
	def redirect(self, url):
		return {
			'proxy': 'redirect',
			'body': url
		}

	def jsonify(self, obj):
		return {
			'proxy': 'json',
			'body': obj
		}

def convert_to_json(data):
	response = {
		'confirmation': 'success',
		'data': data
	}

	return json.dumps(response)

def default_action(request):
	response = {
		'confirmation': 'fail',
		'message': 'Function not found'
	}

	return response

@turbo_app.route('/')
def index():
	return render_template('index.html')

# https://stackoverflow.com/questions/20646822/how-to-serve-static-files-in-flask
# static files route handler
@turbo_app.route('/<string:directory>/<string:subdirectory>/<path:path>')
def send_js(directory, subdirectory, path):
	full_path = '../../../' + directory + '/' + subdirectory
	return send_from_directory(full_path, path)

@turbo_app.route('/vectors/<string:name>')
def functions(name):
	method = getattr(app, name, default_action)
	# context = {} # this is a placeholder. AWS Lambda passes in a context object so we need it here too

	# synonymous to req object in node/express:
	event = {
		'name': name,
		'query': request.args,
		'body': request.form,
		'method': 'get'
	}

	# data = json.dumps(method(event))
	# return make_response(data, 200, {'Content-Type':'application/json'})

	try:
		res = Res()
		payload = method(event, res)
		# print('Proxy', payload, file=sys.stderr) # this worked
		
		proxy = payload['proxy']
		if (proxy == 'json'):
			return make_response(json.dumps(payload['body']), 200, {'Content-Type':'application/json'})

		if (proxy == 'redirect'):
			return redirect(payload['body'])

		# data = json.dumps(payload)
		return make_response(json.dumps(payload), 200, {'Content-Type':'application/json'})
	except Exception as e: # something went wrong!
		data = json.dumps({'confirmation':'fail', 'message':e.__str__()})
		return make_response(data, 200, {'Content-Type':'application/json'})

if __name__ == '__main__':
	turbo_app.run(debug=True, host='0.0.0.0', port=3000)

